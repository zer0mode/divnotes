### python-django custom params ###

## while in idle / idle3
#http://stackoverflow.com/questions/3132265/how-do-i-access-the-command-history-from-idle
# recall commands :
# ->last / previous	= ALT+p
# ->next		= ALT+n

### django installation
## where to start - online guides
#https://docs.djangoproject.com/en/dev/intro/tutorial01/#writing-your-first-django-app-part-1
## installation guides / instructions (can be reached from the link above)
# https://docs.djangoproject.com/en/dev/topics/install/#install-the-django-code
# https://docs.djangoproject.com/en/dev/intro/contributing/

## check version -> if django is already installed
$ python -c "import django; print(django.get_version())"
# or enter into python prompt
$ python3
>>> import django
>>> print(django.get_version())
>>> (Ctrl+D)

## uninstall previous version
# if previously installed with pip, version upgrading and uninstalling is managed with pip
# otherwise find django folder and remove it manually
$ python3 -c "import django; print(django.__path__)"

## installation : virtualenv pip
$ mkdir ~/.virtualenvs
$ sudo apt-get install python3-venv
	# in case of "E: Unable to locate package python3-venv"
	# verify the package version and try the corresponding
	$ sudo apt-get install python3.X-venv
$ python3 -m venv ~/.virtualenvs/djangodev

	## in case the command above fails follow the steps below :
	# install pip3
	$ sudo apt-get install python3-pip
	$ sudo pip3 install virtualenv
	$ virtualenv --python=`which python3` ~/.virtualenvs/djangodev

## activate virtualenv whenever a new terminal is launched
$ source ~/.virtualenvs/djangodev/bin/activate
# add this line in file .bashrc to create alias
alias djactivate='source ~/.virtualenvs/djangodev/bin/activate'
# and resfresh bash or restart terminal
$ . ~/.bashrc

## -> if virtualenv isn't activated, django installs systemwide

$ git clone https://github.com/django/django.git
(djangodev) $ sudo pip3 install -e /path/to/your/local/clone/django/
## after install recheck the version
(djangodev) $ django-admin.py --version
1.11.dev20160612013256


## check paragraph "Where should this code live"
# https://docs.djangoproject.com/en/dev/intro/tutorial01/#creating-a-project
$ sudo mkdir /home/firstimedjango/
$ cd /home/firstimedjango/
	# folder 'firstimedjango' needs a user ownership if located out of ~
	# otherwise the command django-admin fails
	$ sudo chown -R user /home/firstimedjango

## start a new project
$ django-admin startproject djprojone

## \!/ remember -> to avoid possible malfunctioning and timeloss on error searching \!/
# - previously started project out of virtualenv might become unresposive while later activated in virtualenv
# - don't forget to set the ownership of the location where code resides (runserver command will not start the server properly)

## database installation PostgreSQL
# installing a default ubuntu version
$ sudo apt-get install postgresql-$VERSION

	# installing another/latest version via PostgreSQL Apt Repository
	# create pgdg.list
	$ sudo touch /etc/apt/sources.list.d/pgdg.list
	# add the repository for your current ubuntu release
	$ sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
	# import the repository key
	$ wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
	# update repository
	$ sudo apt-get update
	$ sudo apt-get upgrade

# install postresql, postGIS, pgrouting, pgadmin
$ sudo apt-get install postgresql-9.5-postgis-2.2 postgresql-9.5-pgrouting pgadmin3
# subpackage contrib gets installed automatically; it provides additional supplied modules like "fuzzystrmatch"
$ sudo apt-get install postgresql-contrib-9.5

info extracted from :
http://postgis.net/install/
https://www.postgresql.org/download/linux/ubuntu/
https://wiki.postgresql.org/wiki/Apt
http://trac.osgeo.org/postgis/wiki/UsersWikiPostGIS22UbuntuPGSQL95Apt



# before installing the PostgreSQL adapter psycopg2 some packages are needed
	# if PostreSQL is installed run
	$ sudo apt-get install python3-dev
	# otherwise include also
	$ sudo apt-get install libpq-dev python3-dev
# and then the adapter for Python (activate virtualenv)
(djangodev) $ pip install psycopg2

### idle themes ###
## to add custom themes edit file ~/.idlerc/config-highlight.cfg
	## insert theme names and color configuration
	# [Obsidian]
	# https://gist.github.com/dsosby/1122904	
	# [desert]
	# http://ubuntuforums.org/showthread.php?t=657799
	# [Matrix]
	# http://snipplr.com/view/53202/matrix-theme-for-idle/
	# [Custom Dark]
	# [Custom Light]
	# http://stackoverflow.com/questions/33064424/idle-background-color-in-python
## edit file ~/.idlerc/config-main.cfg
[Theme]
default = 0
name = //your default theme name//